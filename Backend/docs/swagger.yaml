basePath: /
definitions:
  Model.User:
    properties:
      department:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: User management API for Stoic.
  title: Stoic API
  version: "1.0"
paths:
  /User/Create:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/Model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Model.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
      summary: Create user
      tags:
      - User
  /User/Delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/Model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete user
      tags:
      - User
  /User/Get/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Model.User'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get user by ID
      tags:
      - User
  /User/Get/All:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Model.User'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get all users
      tags:
      - User
  /User/Update:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/Model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update user
      tags:
      - User
swagger: "2.0"
